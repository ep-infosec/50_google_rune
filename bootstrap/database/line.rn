//  Copyright 2021 Google LLC.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

use filepath

// Line objects record the actual text parsed.
class Line(self, filepath: Filepath, text: string, lineNum: u32) {
  self.text = text
  self.lineNum = lineNum
  if !isnull(filepath) {
    filepath.appendLine(self)
  }

  // Write the line to stdout, with a filename and line number prefix.
  func dump(self) {
    filepath = self.filepath
    assert !isnull(filepath)
    path = filepath.getRelativePath()
    if path.length() > 0 {
      print "File %s, line %u: ", path, self.lineNum
    } else {
      print "Auto-generated: "
    }
    println self.text
  }
}

relation TailLinked Filepath Line cascade

unittest filepathTest {
  filepath = Filepath.new("test_filepath", null(Filepath), false)
  line1 = Line(filepath, "Line 1", 1u32)
  line2 = Line(filepath, "Line 2", 1u32)
  line3 = Line(filepath, "Line 2", 3u32)
  for line in filepath.lines() {
    println line
  }
}
