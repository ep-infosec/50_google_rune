//  Copyright 2021 Google LLC.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

println generateSafePrime().toStringBE().toHex()

func generateSafePrime() {
  p = reveal(rand2048) | (1u2048 << 2047)
  while !isSafePrime(p) {
    p += <p>1
  }
  return p
}

func isSafePrime(p) {
  return isPrime(p) && isPrime((p-<p>1)/<p>2)
}

func isPrime(p) {
  for i in range(64) {
    w = reveal(rand2048) % p  // w is called a "witness"
    x = w**(p-<p>1) mod p
    if x != <p>1 {
      return false;
    }
  }
  return true;
}
