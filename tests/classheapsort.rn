//  Copyright 2021 Google LLC.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

class Root(self) {
}

class Element(self, name, age) {
  self.name = name
  self.age = age

  operator < (element1: Element, element2: Element) {
    if element1.age != element2.age {
      return element1.age < element2.age
    }
    return element1.name < element2.name
  }
}

relation HeapList Root Element cascade

root = Root()
root.pushElement(Element("Fred", 44))
root.pushElement(Element("Bob", 32))
root.pushElement(Element("Dave", 56))
root.pushElement(Element("Alice", 32))
do {
  element = root.popElement()
} while !isnull(element) {
  println element
}
