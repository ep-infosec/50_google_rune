//  Copyright 2021 Google LLC.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

func exteuc(a, b) {
  signedA = signed(a)
  signedB = signed(b)
  arow = [signedA, <signedA>1, <signedA>0]
  brow = [signedB, <signedB>0, <signedB>1]

  do {
    q = arow[0] / brow[0]
    r = arow[0] - q*brow[0]
  } while r != <r>0 {
    r1 = arow[1]-q*brow[1]
    r2 = arow[2]-q*brow[2]
    arow = brow
    brow = [r, r1, r2]
  }

  return brow
}

func checkResult(a, b, g, u, v) {
  println g == signed(a) * u + signed(b) * v
}

res1 = exteuc(55u64, 10u64)
println exteuc(55u64, 10u64)
checkResult(55u64, 10u64, res1[0], res1[1], res1[2])
println exteuc(1u64, 10u64)
println exteuc(121i64, 457i64)
