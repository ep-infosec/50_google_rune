//  Copyright 2021 Google LLC.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

class Set(self, elementType) {
  self.elements = arrayof(elementType)

  operator in(element, set: Set) {
    for i in range(set.elements.length()) {
      e = set.elements[i]
      if e == element {
        return true
      }
    }
    return false;
  }

  func add(self, element) {
    if !(element in self) {
      self.elements.append(element)
    }
  }
}

s = Set(u64)
s.add(1u64)
s.add(2u64)
s.add(3u64)
s.add(3u64)  // Do it twice to see it is not added twice.
s.add(5u64)
println s
assert !(4 in s)
assert 3 in s
