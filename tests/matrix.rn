//  Copyright 2021 Google LLC.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

class Matrix(self, <m>) {
  self.rows = m.length()
  self.cols = m[0].length()
  self.m = m

  operator + (a: Matrix, b: typeof(a)) -> Matrix {
    if a.rows != b.rows || a.cols != b.cols {
      throw "Tried to add matricies of different sizes"
    }
    m = a.m
    result = Matrix(m)
    for row in range(a.rows) {
      for col in range(a.cols) {
        result.m[row][col] += b.m[row][col]
      }
    }
    return result
  }
}

unittest matrixTest {
  A = Matrix([
     [1, 2, 3],
     [4, 5, 6],
     [7, 8, 9]])
  B = Matrix([
     [1, 4, 7],
     [2, 5, 8],
     [3, 6, 9]])
  println A + B
}
