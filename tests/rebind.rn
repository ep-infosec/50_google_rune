//  Copyright 2021 Google LLC.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// This tests that we can rebind a function.  In the typeof expression below,
// we call incrementAndNegate.  This does not cause either negate or
// incrementAndNegate to be generated in the resulting binary, as their
// signatures are not instantiated.  We then rebind incrementAndNegate on the
// next line.

func negate(a, returnType) {
  println "Casting return type to ", typeof(returnType)
  return <returnType>-a
}

func incrementAndNegate(a, returnType) {
  // Passing typeof(returnType) avoids instantiating returntype.
  return negate(a + 1, typeof(returnType))
}

returnType = typeof(incrementAndNegate(i32, i64))
println incrementAndNegate(123i32, returnType)
