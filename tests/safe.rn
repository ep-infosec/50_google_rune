//  Copyright 2021 Google LLC.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

class Mom(self, name) {
  self.name = name

  func destroyChildren(self) {
    for child in self.safeChilds() {
      child.destroy()
    }
  }

  final(self) {
    println self.name, " destroyed"
  }
}

class Dad(self, name) {
  self.name = name

  final(self) {
    println self.name, " destroyed"
  }
}

class Child(self, mom, dad, name) {
  self.name = name
  mom.appendChild(self)
  dad.appendChild(self)

  final(self) {
    println self.name, " destroyed"
  }
}

relation DoublyLinked Mom Child cascade
relation DoublyLinked Dad Child cascade

mom1 = Mom("Alice")
dad = Dad("Bob")
mom2 = Mom("Carla")

child1 = Child(mom1, dad, "Charlie")
child2 = Child(mom1, dad, "David")
child2 = Child(mom2, dad, "Eve")
println dad.name, " has ", dad.countChilds(), " children"
println mom1.name, " has ", mom1.countChilds(), " children"
println mom2.name, " has ", mom2.countChilds(), " children"

mom1.destroyChildren()
